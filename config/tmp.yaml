# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv8-seg instance segmentation model. For Usage examples see https://docs.ultralytics.com/tasks/segment

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-seg.yaml' will call yolov8-seg.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]
# depth_multiple: 0.33  # model depth multiple 控制模型的深度，仅在repeats>1时有效
# width_multiple: 0.25  # model width multiple 控制模型的宽度，主要作用于args中的ch_out参数（第一个）
# 如第一个Conv层，ch_out=64，那么在v8n实际运算过程中，会将卷积过程中的卷积核设为64x0.25，所以会输出16通道的特征图。
# 第三层重复三次，实际次数乘depth，n=3*d=3*0.33=1，所以实际上只会重复一次，即yolov8n只有一次C3f操作。

fusion_mode: bifpn
node_mode: C2f
head_channel: 256

# Mamba-YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, SimpleStem, [128, 3]]                 # 0-P2/4
  - [-1, 3, Base_VSSBlock, [128]]                 # 1
  - [-1, 1, VisionClueMerge, [256]]               # 2 p3/8

  - [-1, 1, MFACB, [256, 3, 1, [2, 2, 2]]]        # 3
  - [-1, 1, MFACB, [256, 3, 1, [3, 3, 3]]]        # 4
  - [-3, 4, Base_VSSBlock, [256]]                 # 5
  - [[-1, -2], 1, Concat, [1]]                    # 6
  - [-1, 1, DepthwiseSeparableCBAMConv, [256]]    # 7

  - [-1, 1, VisionClueMerge, [512]]               # 8 p4/16

  - [-1, 1, MFACB, [512, 3, 1, [3, 3, 3]]]        # 9
  - [-1, 1, MFACB, [512, 3, 1, [5, 5, 5]]]        # 10
  - [-3, 4, Base_VSSBlock, [512]]                 # 11
  - [[-1, -2], 1, Concat, [1]]                    # 12
  - [-1, 1, DepthwiseSeparableCBAMConv, [512]]    # 13

  - [-1, 1, VisionClueMerge, [1024]]              # 14 p5/32

  - [-1, 1, MFACB, [1024, 3, 1, [5, 5, 5]]]       # 15
  - [-2, 3, Base_VSSBlock, [1024]]                # 16
  - [[-1, -2], 1, Concat, [1]]                    # 17
  - [-1, 1, DepthwiseSeparableCBAMConv, [1024]]   # 18

  - [-1, 1, FocalModulation, []]                  # 19

# YOLOv8.0n head
head:
  - [7, 1, GLSA, [head_channel]]                  # 20-P3/8
  - [13, 1, GLSA, [head_channel]]                 # 21-P4/16
  - [19, 1, GLSA, [head_channel]]                 # 22-P5/32

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]    # 23 P5->P4
  - [[-1, 21], 1, Fusion, [fusion_mode]]          # 24
  - [-1, 3, node_mode, [head_channel]]            # 25-P4/16

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]    # 26 P4->P3
  - [[-1, 20], 1, Fusion, [fusion_mode]]          # 27
  - [-1, 3, node_mode, [head_channel]]            # 28-P3/8

  - [1, 1, Conv, [head_channel, 3, 2]]            # 29 P2->P3
  - [[-1, 20, 28], 1, Fusion, [fusion_mode]]      # 30
  - [-1, 3, node_mode, [head_channel]]            # 31-P3/8

  - [-1, 1, Conv, [head_channel, 3, 2]]           # 32 P3->P4
  - [[-1, 21, 25], 1, Fusion, [fusion_mode]]      # 33
  - [-1, 3, node_mode, [head_channel]]            # 34-P4/16

  - [-1, 1, Conv, [head_channel, 3, 2]]           # 35 P4->P5
  - [[-1, 22], 1, Fusion, [fusion_mode]]          # 36
  - [-1, 3, node_mode, [head_channel]]            # 37-P5/32

  - [[31, 34, 37], 1, Segment, [nc, 32, 256]]     # 38 Segment(P3, P4, P5)